"""3270. Find the Key of the Numbers
Link: https://leetcode.com/problems/find-the-key-of-the-numbers/
Difficulty: Easy
Description: You are given three positive integers num1, num2, and num3.
The key of num1, num2, and num3 is defined as a four-digit number such that:
- Initially, if any number has less than four digits, it is padded with leading zeros.
- The ith digit (1 <= i <= 4) of the key is generated by taking the smallest digit 
among the ith digits of num1, num2, and num3.
Return the key of the three numbers without leading zeros (if any)."""


class Solution:
    @staticmethod
    def generateKey(num1: int, num2: int, num3: int) -> int:
        """Optimal Solution: String Manipulation. Time Complexity: O(1), Space Complexity: O(1)."""
        # Convert numbers to strings and pad with leading zeros
        num1_str = str(num1).zfill(4)
        num2_str = str(num2).zfill(4)
        num3_str = str(num3).zfill(4)

        # Generate the key by taking the minimum digit at each position from left to right
        for i in range(4):
            key = min(num1_str[i], num2_str[i], num3_str[i])
            if i == 0:
                result = key
            else:
                result += key
        
        return int(result)


# Input: num1 = 1, num2 = 10, num3 = 1000, Output: 0
assert Solution.generateKey(1, 10, 1000) == 0

# Input: num1 = 987, num2 = 879, num3 = 798, Output: 777
assert Solution.generateKey(987, 879, 798) == 777

# Input: num1 = 1, num2 = 2, num3 = 3, Output: 1
assert Solution.generateKey(1, 2, 3) == 1

print("All unit tests are passed.")
